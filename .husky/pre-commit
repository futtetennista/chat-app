# shellcheck disable=SC2148

pnpm exec lint-staged

changed_packages=$(git diff --cached --name-only --diff-filter=d | grep -E '\.[jt]sx?$' | cut -d'/' -f2 | sort -u)
if [ -z "$changed_packages" ]; then
  echo "[pre-commit] Changed packages: none"
else
  echo "[pre-commit] Changed packages: $(echo "${changed_packages[*]}" | tr '\n' ', ' | sed 's/,$//')"
fi

if [ -n "$changed_packages" ]; then
  pnpm --recursive run clean
  pnpm --recursive run compile
fi

for package in $changed_packages; do
  if [ -d "packages/$package" ]; then
    echo "[pre-commit] ⏳ Prettier for package '$package' will start."
    pnpm run format "packages/$package"
    echo "[pre-commit] ✅ Prettier for package '$package' did end."
    # Make sure only files that prettier might have changed are staged.
    files_formatted="$(git diff --diff-filter=d --staged --name-only "packages/$package" | grep -E '\.([jt]sx?|json)$' | sort -u)"
    if [ -n "$files_formatted" ]; then
      echo "$files_formatted" | xargs git add
    fi
    echo "[pre-commit] ⏳ Tests for package '$package' will start."
    pnpm --filter "$package" run test:unit
    echo "[pre-commit] ✅ Tests for package '$package' did end."
  fi
done

git diff --cached --name-only --diff-filter=d | while read -r file; do
  if [ -f "$file" ]; then
    # Ensure files have ending newline
    if [ "$(tail -c1 "$file")" != "" ]; then
      echo "[pre-commit] Adding newline to $file"
      echo "" >> "$file"
    fi

    # Remove trailing whitespace and add back to staging
    sed -i 's/\s*$//' "$file"
    git add "$file"
  fi
done

changed_scripts=$(git diff --cached --name-only --diff-filter=d | grep -E '(.husky|\.sh$)' | sort -u)
if [ -z "$changed_scripts" ]; then
  echo "[pre-commit] Changed scripts: none"
else
  echo "[pre-commit] Changed scripts: $(echo "${changed_scripts[*]}" | tr '\n' ', ' | sed 's/,$//')"
  echo "[pre-commit] ⏳ Shellcheck will start."
  echo "${changed_scripts[@]}" | xargs shellcheck -x
  echo "[pre-commit] ✅ Shellcheck did end."
fi
