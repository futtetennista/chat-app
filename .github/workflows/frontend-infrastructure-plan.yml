name: frontend-infrastructure-plan

permissions:
  contents: read
  pull-requests: write

on:
  # pull_request:
  #   paths:
  #     - '.github/workflows/frontend-infrastructure-plan.yml'
  #     - 'packages/frontend-infrastructure/**'
  workflow_call:
  workflow_dispatch:

jobs:
  terraform-plan:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Make config
        working-directory: ./packages/frontend-infrastructure/scripts
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_REGION: ${{ vars.AWS_REGION }}
          AWS_S3_BUCKET_NAME: ${{ vars.AWS_S3_BUCKET_NAME }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          echo "FRONTEND_INFRASTRUCTURE_JSON_CONFIG=$(mk-config.sh)" >>"$GITHUB_ENV"
      - name: Checkout repo
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - uses: ./.github/actions/setup-nodejs-pnpm
        name: Set up node.js with pnpm
        with:
          install-filter: frontend-infrastructure
      - name: Test stack
        working-directory: ./packages/frontend-infrastructure
        run: pnpm run test:unit
      - name: Get CDKTF version
        id: get-cdktf-version
        run: |
          version=$(pnpm --filter 'frontend-infrastructure' list cdktf | grep cdktf | cut -d ' ' -f 2)
          echo "cdktf-version=$version" >>"$GITHUB_OUTPUT"
      - name: Generate module and provider bindings
        working-directory: ./packages/frontend-infrastructure
        run: pnpx cdktf-cli@${{ steps.get-cdktf-version.outputs.cdktf-version }} get
      - name: Terraform plan
        uses: hashicorp/terraform-cdk-action@v5
        with:
          cdktfVersion: ${{ steps.get-cdktf-version.outputs.cdktf-version }}
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          mode: plan-only
          stackName: frontend
          terraformVersion: 1.9.8
          workingDirectory: ./packages/frontend-infrastructure
      # - name: Build frontend
      #   working-directory: ./packages/frontend
      #   if: ${{ github.event_name != 'workflow_call' }}
      #   run: pnpm build
      # - name: Download build
      #   if: ${{ github.event_name != 'pull_request' }}
      #   uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
      #   with:
      #     name: frontend
      #     path: ./packages/frontend/build
